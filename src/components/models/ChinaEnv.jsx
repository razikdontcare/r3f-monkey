/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 .\CHINA.glb -T --shadows -E 
Files: .\CHINA.glb [98.52MB] > D:\Wannabe Stuff\Projects\Monyet\CHINA WW2\china\CHINA-transformed.glb [34.44MB] (65%)
*/

import React from "react";
import { useGLTF } from "@react-three/drei";

export default function ChinaEnv(props) {
  const { nodes, materials } = useGLTF("/CHINA-transformed.glb");
  return (
    <group {...props} dispose={null}>
      <pointLight
        intensity={Math.PI * 10}
        decay={2}
        position={[4.076, 5.904, -1.005]}
        rotation={[-1.839, 0.602, 1.932]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane.geometry}
        material={materials.Brick}
        scale={[2.5, 5.609, 1.5]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Empty001.geometry}
        material={materials.Empty}
        position={[-3.3, 1.266, 0.03]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={0.519}
      />
      <group position={[-2.4, 0, -0.87]} scale={0.085}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.model001_1.geometry}
          material={materials["材质.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.model001_2.geometry}
          material={materials["材质.002"]}
        />
      </group>
      <group
        position={[-1.884, 0.047, 1.179]}
        rotation={[0, Math.PI / 2, 0]}
        scale={0.081}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial008_1.geometry}
          material={materials.DefaultMaterial_1003}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial008_2.geometry}
          material={materials.DefaultMaterial_1010}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial008_3.geometry}
          material={materials.DefaultMaterial_1001}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial008_4.geometry}
          material={materials.DefaultMaterial_1008}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial008_5.geometry}
          material={materials.DefaultMaterial_1009}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial008_6.geometry}
          material={materials.DefaultMaterial_1007}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial008_7.geometry}
          material={materials.DefaultMaterial_1002}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial008_8.geometry}
          material={materials.DefaultMaterial_1004}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial008_9.geometry}
          material={materials.DefaultMaterial_1005}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.defaultMaterial008_10.geometry}
          material={materials.DefaultMaterial_1006}
        />
      </group>
      <group
        position={[-2.364, 0, 0.688]}
        rotation={[0, Math.PI / 2, 0]}
        scale={0.146}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.网格001.geometry}
          material={materials["1"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.网格001_1.geometry}
          material={materials["5"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.网格001_2.geometry}
          material={materials["4"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.网格001_3.geometry}
          material={materials["2"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.网格001_4.geometry}
          material={materials["3"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.网格001_5.geometry}
          material={materials.Knot_3_Mat}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.网格001_6.geometry}
          material={materials.Bark_Mat}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.网格001_7.geometry}
          material={materials.Leaf_1_Mat}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.网格001_8.geometry}
          material={materials.Leaf_2_Mat}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.网格001_9.geometry}
          material={materials.Leaf_1a_Mat}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.网格001_10.geometry}
          material={materials.Leaf_2a_Mat}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.网格001_11.geometry}
          material={materials.mud_forest}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Куб.geometry}
        material={materials["Metal #1"]}
        position={[0, 0.423, 0.62]}
      />
      <group position={[-0.735, 0.51, 0.507]} scale={0.118}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.ТраекторияNurbs006.geometry}
          material={materials["Metal #2"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.ТраекторияNurbs006_1.geometry}
          material={materials["Flag Texture"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/CHINA-transformed.glb");
